// Database configuration
datasource db {
  provider = "mongodb"  // Using MongoDB as our database
  url      = env("DATABASE_URL")  // Connection string from environment variables
}

// Prisma client configuration
generator client {
  provider = "prisma-client-js"  // Generate TypeScript client
}

// Product model for storing product information
model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  sku         String   @unique  // SKU must be unique
  status      String   @default("active") // active, discontinued, draft
  category    String?
  tags        String[]
  imageUrls   String[]
  stock       Int      // Total stock
  reserved    Int      @default(0)  // Stock reserved for orders
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([category])
  @@index([status])
}

// Outbox pattern for reliable message publishing
model OutboxMessage {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  eventType   String
  payload     Json
  status      String    @default("pending")
  createdAt   DateTime  @default(now())
  processedAt DateTime?
}

// Track stock reservations for orders
model StockReservation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String
  sku       String
  quantity  Int
  status    String   // RESERVED, CONFIRMED, CANCELLED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Indexes for faster queries
  @@index([orderId])
  @@index([sku])
}

// Remove or merge Inventory model with Product since they share similar concerns 